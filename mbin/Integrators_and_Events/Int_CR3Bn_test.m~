function [dX] = Int_CR3Bn(t,X,extras)
%%% For numerical integration in the normalized CR3BP
%%% Inputs:
%          t - normalized time vector
%          X - initial state [6x1]
%          extras - (u, R2_n, L1x, L2x)

%%% Preallocate state output
dX = zeros(6,1);

%%% Unpack the barycentric state vector
x = X(1); y = X(2); z = X(3); % Position
dx = X(4); dy = X(5); dz = X(6); % Velocity

%%% Distances to primary (1) and secondary (2) bodies
r1 = sqrt((X(1)+extras.u)^2 + X(2)^2 + z^2);
r2 = sqrt((X(1)+extras.u-1)^2 + X(2)^2 + z^2);

%%% Equations of Motion
ddx = 2*dy + X(1) - (1-extras.u)*(X(1)+extras.u)/(r1^3) - extras.u*(X(1)+extras.u-1)/(r2^3);
ddy = -2*dx + X(2) -((1-extras.u)/(r1^3) + extras.u/(r2^3))*X(2);
ddz = -((1-extras.u)/(r1^3) + extras.u/(r2^3))*z;

%%% Output the derivative of the state
dX(1:3) = [dx; dy; dz]; % km/s
dX(4:6) = [ddx; ddy; ddz]; % km/s^2
end

