% ========================================================================
%%% Description
% ========================================================================
% 

% Created: 
% Author : Luke Bury, luke.bury@colorado.edu
% ========================================================================
%%% Initialization
% ========================================================================
clear
clc
close all
mbinPath = '~/CU_Google_Drive/Documents/MatGit/mbin';
addpath(genpath(mbinPath))
ticWhole = tic;

% ========================================================================
%%% Importing Data
% ========================================================================
%%% General data on solar system bodies
bodies = getBodyData(mbinPath);

%%% Color options/schemes
colors = get_colors();

%%% Periodic orbit ICs
PO_ICs = get_PO_ICs();

% ========================================================================
%%% Run Switches
% ========================================================================
runSpeedTest = 0;

% ========================================================================
%%% Testing the new equations
% ========================================================================
% % -------------------------------------------------
% %%% Make symbollic variables
% % -------------------------------------------------
% syms GM x y z R r J2 J3 J4 J5 J6  real

% -------------------------------------------------
%%% Test values
% -------------------------------------------------
u = 0.3;
x = 0.7;
y = 0.1;
z = 0.22;
xd = 0.012;
yd = 0.032;
zd = 0.015;
J2p = 0.04;
J2s = 0.049;
J3p = 0.003;
J3s = 0.0018;
J4p = 0.012;
J4s = 0.019;
J5p = 0.0047;
J5s = 0.0076;
J6p = 0.0015;
J6s = 0.0023;
R1 = 0.05;
R2 = 0.013;

r1 = ((x+u)^2 + y^2 + z^2)^(1/2);
r2 = ((x-1+u)^2 + y^2 + z^2)^(1/2);
% -------------------------------------------------
%%% J3 term
% -------------------------------------------------
%%% From new derivation (General form)
% dMdx_J2 = 3*GM*R^2*J2*(5*z^2-r^2)*x / (2*r^7);
% dMdz_J2 = 3*GM*R^2*J2*(5*z^2-3*r^2)*z / (2*r^7);

%%% From new derivation (plugged in for primary)
dMdx_J2p = 3*(1-u)*(R1^2)*J2p*(5*z^2-r1^2)*(x+u) / (2*r1^7);
dMdz_J2p = 3*(1-u)*(R1^2)*J2p*(5*z^2-3*r1^2)*z / (2*r1^7);

%%% From equation generator
eqGen_dMdx_J2p = - (J2p*R1^2*(2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(5/2)) + (5*J2p*R1^2*(2*u + 2*x)*(u - 1)*((u + x)^2 + y^2 - 2*z^2))/(4*((u + x)^2 + y^2 + z^2)^(7/2));
eqGen_dMdz_J2p = (2*J2p*R1^2*z*(u - 1))/((u + x)^2 + y^2 + z^2)^(5/2) + (5*J2p*R1^2*z*(u - 1)*((u + x)^2 + y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(7/2));
% -------------------------------------------------
%%% J3 term
% -------------------------------------------------
%%% From new derivation (General form)
% dMdx_J3 = 5*GM*(R^3)*J3*z*(6*z^2 - 3*r^2) * x / (2*r^9);
% dMdz_J3 = GM*(R^3)*J3*(3*r^4 - 30*z^2*r^2 + 35*z^4) / (2*r^9);

%%% From new derivation (plugged in for primary)
dMdx_J3p = 5*(1-u)*(R1^3)*J3p*z*(7*z^2 - 3*r1^2) * (x+u) / (2*r1^9);
dMdz_J3p = (1-u)*(R1^3)*J3p*(3*r1^4 - 30*z^2*r1^2 + 35*z^4) / (2*r1^9);

%%% From equation generator
eqGen_dMdx_J3p = - (J3p*R1^3*z*(6*u + 6*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(7/2)) + (7*J3p*R1^3*z*(2*u + 2*x)*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(4*((u + x)^2 + y^2 + z^2)^(9/2));
eqGen_dMdz_J3p = (2*J3p*R1^3*z^2*(u - 1))/((u + x)^2 + y^2 + z^2)^(7/2) - (J3p*R1^3*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(7/2)) + (7*J3p*R1^3*z^2*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(9/2));
% -------------------------------------------------
%%% J4 term
% -------------------------------------------------
%%% From new derivation (General form)
% dMdx_J4 = 15*GM*(R^4)*J4*(21*z^4 - 14*r^2*z^2 + r^4) * x / (8*r^11);
% dMdz_J4 = 5*GM*(R^4)*J4*z*(15*r^4 - 70*z^2*r^2 + 63*z^4) / (8*r^11);

%%% From new derivation (plugged in for primary)
dMdx_J4p = 15*(1-u)*(R1^4)*J4p*(21*z^4 - 14*r1^2*z^2 + r1^4) * (x+u) / (8*r1^11);
dMdz_J4p = 5*(1-u)*(R1^4)*J4p*z*(15*r1^4 - 70*z^2*r1^2 + 63*z^4) / (8*r1^11);

%%% From equation generator
eqGen_dMdx_J4p = (J4p*R1^4*(6*(2*u + 2*x)*((u + x)^2 + y^2 + z^2) - 30*z^2*(2*u + 2*x))*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(9/2)) - (9*J4p*R1^4*(2*u + 2*x)*(u - 1)*(3*((u + x)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(11/2));
eqGen_dMdz_J4p = - (J4p*R1^4*(48*z*((u + x)^2 + y^2 + z^2) - 80*z^3)*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(9/2)) - (9*J4p*R1^4*z*(u - 1)*(3*((u + x)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(11/2));

% -------------------------------------------------
%%% J5 term
% -------------------------------------------------
%%% From new derivation (General form)
% dMdx_J5 = 7*GM*(R^5)*J5*z*(15*r^4 - 90*z^2*r^2 + 99*z^4) * x / (8*r^13);
% dMdz_J5 = 3*GM*(R^5)*J5*(-5*r^6 + 105*z^2*r^4 - 315*z^4*r^2 + 231*z^6) / (8*r^13);

%%% From new derivation (plugged in for primary)
dMdx_J5p = 7*(1-u)*(R1^5)*J5p*z*(15*r1^4 - 90*z^2*r1^2 + 99*z^4) * (x+u) / (8*r1^13);
dMdz_J5p = 3*(1-u)*(R1^5)*J5p*(-5*r1^6 + 105*z^2*r1^4 - 315*z^4*r1^2 + 231*z^6) / (8*r1^13);

%%% From equation generator
eqGen_dMdx_J5p = (J5p*R1^5*z*(30*(2*u + 2*x)*((u + x)^2 + y^2 + z^2) - 70*z^2*(2*u + 2*x))*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(11/2)) - (11*J5p*R1^5*z*(2*u + 2*x)*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2));
eqGen_dMdz_J5p = (J5p*R1^5*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(11/2)) - (11*J5p*R1^5*z^2*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(13/2)) - (J5p*R1^5*z*(80*z*((u + x)^2 + y^2 + z^2) - 112*z^3)*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(11/2));
% -------------------------------------------------
%%% J6 term
% -------------------------------------------------
%%% From new derivation (General form)
% dMdx_J6 = 7*GM*(R^6)*J6*(-5*r^6 + 135*z^2*r^4 - 495*z^4*r^2 + 429*z^6) * x / (16*r^15);
% dMdz_J6 = 7*GM*(R^6)*J6*z*(-35*r^6 + 315*z^2*r^4 - 693*z^4*r^2 + 429*z^6) / (16*r^15);

%%% From new derivation (plugged in for primary)
dMdx_J6p = 7*(1-u)*(R1^6)*J6p*(-5*r1^6 + 135*z^2*r1^4 - 495*z^4*r1^2 + 429*z^6) * (x+u) / (16*r1^15);
dMdz_J6p = 7*(1-u)*(R1^6)*J6p*z*(-35*r1^6 + 315*z^2*r1^4 - 693*z^4*r1^2 + 429*z^6) / (16*r1^15);

%%% From equation generator
eqGen_dMdx_J6p = - (J6p*R1^6*(u - 1)*(315*z^4*(2*u + 2*x) + 15*(2*u + 2*x)*((u + x)^2 + y^2 + z^2)^2 - 210*z^2*(2*u + 2*x)*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2)) + (13*J6p*R1^6*(2*u + 2*x)*(u - 1)*(5*((u + x)^2 + y^2 + z^2)^3 - 105*z^2*((u + x)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x)^2 + y^2 + z^2)))/(32*((u + x)^2 + y^2 + z^2)^(15/2));
eqGen_dMdz_J6p = (J6p*R1^6*(u - 1)*(756*z^5 + 180*z*((u + x)^2 + y^2 + z^2)^2 - 840*z^3*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2)) + (13*J6p*R1^6*z*(u - 1)*(5*((u + x)^2 + y^2 + z^2)^3 - 105*z^2*((u + x)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(15/2));

% -------------------------------------------------
%%% Calculate errors
% -------------------------------------------------
error_J2_x = dMdx_J2p - eqGen_dMdx_J2p;
error_J2_z = dMdz_J2p - eqGen_dMdz_J2p;
error_J3_x = dMdx_J3p - eqGen_dMdx_J3p;
error_J3_z = dMdz_J3p - eqGen_dMdz_J3p;
error_J4_x = dMdx_J4p - eqGen_dMdx_J4p;
error_J4_z = dMdz_J4p - eqGen_dMdz_J4p;
error_J5_x = dMdx_J5p - eqGen_dMdx_J5p;
error_J5_z = dMdz_J5p - eqGen_dMdz_J5p;
error_J6_x = dMdx_J6p - eqGen_dMdx_J6p;
error_J6_z = dMdz_J6p - eqGen_dMdz_J6p;
% -------------------------------------------------
%%% Print errors
% -------------------------------------------------
fprintf('J2 errors:\nx: %1.1e\nz: %1.1e\n\n', error_J2_x, error_J2_z)

fprintf('J3 errors:\nx: %1.1e\nz: %1.1e\n\n', error_J3_x, error_J3_z)

fprintf('J4 errors:\nx: %1.1e\nz: %1.1e\n\n', error_J4_x, error_J4_z)

fprintf('J5 errors:\nx: %1.1e\nz: %1.1e\n\n', error_J5_x, error_J5_z)

fprintf('J6 errors:\nx: %1.1e\nz: %1.1e\n\n', error_J6_x, error_J6_z)

fprintf('========================================================================\n')

% ========================================================================
%%% Testing the new integrator
% ========================================================================
%%% For numerical integration in the normalized CR3BP with J2 of each body
%%% Inputs:
%          t - normalized time vector
%          X - initial state [6x1]
%          prms - (u, R1_n, R2_n, J2p, J2s, J3p, J3s, J4p, J4s)
%
%
%          u - mass ratio of CR3BP system
%          R1 - radius of primary body
%          R2 - radius of secondary body
%          J2p - J2 of primary body
%          J2s - J2 of secondary body
%          J3p - J3 of primary body
%          J3s - J3 of secondary body
%          J4p - J4 of primary body
%          J4s - J4 of secondary body

X = [x; y; z; xd; yd; zd];

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J2p = J2p; 
dX_J2p = Int_CR3Bn_ZH_new(0,X,prms);
clear prms

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J2s = J2s;
[dX_J2s] = Int_CR3Bn_ZH_new(0,X,prms);
clear prms

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J3p = J3p;
[dX_J3p] = Int_CR3Bn_ZH_new(0,X,prms);
clear prms

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J3s = J3s;
[dX_J3s] = Int_CR3Bn_ZH_new(0,X,prms);
clear prms

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J4p = J4p;
[dX_J4p] = Int_CR3Bn_ZH_new(0,X,prms);
clear prms

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J4s = J4s;
[dX_J4s] = Int_CR3Bn_ZH_new(0,X,prms);
clear prms

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J5p = J5p;
[dX_J5p] = Int_CR3Bn_ZH_new(0,X,prms);
clear prms

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J5s = J5s;
[dX_J5s] = Int_CR3Bn_ZH_new(0,X,prms);
clear prms

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J6p = J6p;
[dX_J6p] = Int_CR3Bn_ZH_new(0,X,prms);
clear prms

prms.u = u; prms.R1 = R1; prms.R2 = R2; prms.J6s = J6s;
[dX_J6s] = Int_CR3Bn_ZH_new(0,X,prms);
clear prms


%%% From equation generator
dX_J2p_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) - (J2p*R1^2*(2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(5/2)) + (5*J2p*R1^2*(2*u + 2*x)*(u - 1)*((u + x)^2 + y^2 - 2*z^2))/(4*((u + x)^2 + y^2 + z^2)^(7/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (J2p*R1^2*y*(u - 1))/((u + x)^2 + y^2 + z^2)^(5/2) + (5*J2p*R1^2*y*(u - 1)*((u + x)^2 + y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(7/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (2*J2p*R1^2*z*(u - 1))/((u + x)^2 + y^2 + z^2)^(5/2) + (5*J2p*R1^2*z*(u - 1)*((u + x)^2 + y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(7/2))];

dX_J2s_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) + (J2s*R2^2*u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(5/2)) - (5*J2s*R2^2*u*(2*u + 2*x - 2)*((u + x - 1)^2 + y^2 - 2*z^2))/(4*((u + x - 1)^2 + y^2 + z^2)^(7/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) + (J2s*R2^2*u*y)/((u + x - 1)^2 + y^2 + z^2)^(5/2) - (5*J2s*R2^2*u*y*((u + x - 1)^2 + y^2 - 2*z^2))/(2*((u + x - 1)^2 + y^2 + z^2)^(7/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) - (2*J2s*R2^2*u*z)/((u + x - 1)^2 + y^2 + z^2)^(5/2) - (5*J2s*R2^2*u*z*((u + x - 1)^2 + y^2 - 2*z^2))/(2*((u + x - 1)^2 + y^2 + z^2)^(7/2))];


dX_J3p_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) - (J3p*R1^3*z*(6*u + 6*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(7/2)) + (7*J3p*R1^3*z*(2*u + 2*x)*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(4*((u + x)^2 + y^2 + z^2)^(9/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (3*J3p*R1^3*y*z*(u - 1))/((u + x)^2 + y^2 + z^2)^(7/2) + (7*J3p*R1^3*y*z*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(9/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (2*J3p*R1^3*z^2*(u - 1))/((u + x)^2 + y^2 + z^2)^(7/2) - (J3p*R1^3*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(7/2)) + (7*J3p*R1^3*z^2*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(9/2))];


dX_J3s_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) + (J3s*R2^3*u*z*(6*u + 6*x - 6))/(2*((u + x - 1)^2 + y^2 + z^2)^(7/2)) - (7*J3s*R2^3*u*z*(2*u + 2*x - 2)*(3*(u + x - 1)^2 + 3*y^2 - 2*z^2))/(4*((u + x - 1)^2 + y^2 + z^2)^(9/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) + (3*J3s*R2^3*u*y*z)/((u + x - 1)^2 + y^2 + z^2)^(7/2) - (7*J3s*R2^3*u*y*z*(3*(u + x - 1)^2 + 3*y^2 - 2*z^2))/(2*((u + x - 1)^2 + y^2 + z^2)^(9/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) - (2*J3s*R2^3*u*z^2)/((u + x - 1)^2 + y^2 + z^2)^(7/2) + (J3s*R2^3*u*(3*(u + x - 1)^2 + 3*y^2 - 2*z^2))/(2*((u + x - 1)^2 + y^2 + z^2)^(7/2)) - (7*J3s*R2^3*u*z^2*(3*(u + x - 1)^2 + 3*y^2 - 2*z^2))/(2*((u + x - 1)^2 + y^2 + z^2)^(9/2))];


dX_J4p_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) + (J4p*R1^4*(6*(2*u + 2*x)*((u + x)^2 + y^2 + z^2) - 30*z^2*(2*u + 2*x))*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(9/2)) - (9*J4p*R1^4*(2*u + 2*x)*(u - 1)*(3*((u + x)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(11/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) + (J4p*R1^4*(12*y*((u + x)^2 + y^2 + z^2) - 60*y*z^2)*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(9/2)) - (9*J4p*R1^4*y*(u - 1)*(3*((u + x)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(11/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) - (J4p*R1^4*(48*z*((u + x)^2 + y^2 + z^2) - 80*z^3)*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(9/2)) - (9*J4p*R1^4*z*(u - 1)*(3*((u + x)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(11/2))];


dX_J4s_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) - (J4s*R2^4*u*(6*(2*u + 2*x - 2)*((u + x - 1)^2 + y^2 + z^2) - 30*z^2*(2*u + 2*x - 2)))/(8*((u + x - 1)^2 + y^2 + z^2)^(9/2)) + (9*J4s*R2^4*u*(3*((u + x - 1)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x - 1)^2 + y^2 + z^2))*(2*u + 2*x - 2))/(16*((u + x - 1)^2 + y^2 + z^2)^(11/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (J4s*R2^4*u*(12*y*((u + x - 1)^2 + y^2 + z^2) - 60*y*z^2))/(8*((u + x - 1)^2 + y^2 + z^2)^(9/2)) + (9*J4s*R2^4*u*y*(3*((u + x - 1)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x - 1)^2 + y^2 + z^2)))/(8*((u + x - 1)^2 + y^2 + z^2)^(11/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (J4s*R2^4*u*(48*z*((u + x - 1)^2 + y^2 + z^2) - 80*z^3))/(8*((u + x - 1)^2 + y^2 + z^2)^(9/2)) + (9*J4s*R2^4*u*z*(3*((u + x - 1)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x - 1)^2 + y^2 + z^2)))/(8*((u + x - 1)^2 + y^2 + z^2)^(11/2))];


dX_J5p_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) + (J5p*R1^5*z*(30*(2*u + 2*x)*((u + x)^2 + y^2 + z^2) - 70*z^2*(2*u + 2*x))*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(11/2)) - (11*J5p*R1^5*z*(2*u + 2*x)*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) + (J5p*R1^5*z*(60*y*((u + x)^2 + y^2 + z^2) - 140*y*z^2)*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(11/2)) - (11*J5p*R1^5*y*z*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(13/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (J5p*R1^5*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(11/2)) - (11*J5p*R1^5*z^2*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(13/2)) - (J5p*R1^5*z*(80*z*((u + x)^2 + y^2 + z^2) - 112*z^3)*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(11/2))];


dX_J5s_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) - (J5s*R2^5*u*z*(30*(2*u + 2*x - 2)*((u + x - 1)^2 + y^2 + z^2) - 70*z^2*(2*u + 2*x - 2)))/(8*((u + x - 1)^2 + y^2 + z^2)^(11/2)) + (11*J5s*R2^5*u*z*(15*((u + x - 1)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x - 1)^2 + y^2 + z^2))*(2*u + 2*x - 2))/(16*((u + x - 1)^2 + y^2 + z^2)^(13/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (J5s*R2^5*u*z*(60*y*((u + x - 1)^2 + y^2 + z^2) - 140*y*z^2))/(8*((u + x - 1)^2 + y^2 + z^2)^(11/2)) + (11*J5s*R2^5*u*y*z*(15*((u + x - 1)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x - 1)^2 + y^2 + z^2)))/(8*((u + x - 1)^2 + y^2 + z^2)^(13/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) - (J5s*R2^5*u*(15*((u + x - 1)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x - 1)^2 + y^2 + z^2)))/(8*((u + x - 1)^2 + y^2 + z^2)^(11/2)) + (J5s*R2^5*u*z*(80*z*((u + x - 1)^2 + y^2 + z^2) - 112*z^3))/(8*((u + x - 1)^2 + y^2 + z^2)^(11/2)) + (11*J5s*R2^5*u*z^2*(15*((u + x - 1)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x - 1)^2 + y^2 + z^2)))/(8*((u + x - 1)^2 + y^2 + z^2)^(13/2))];


dX_J6p_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) - (J6p*R1^6*(u - 1)*(315*z^4*(2*u + 2*x) + 15*(2*u + 2*x)*((u + x)^2 + y^2 + z^2)^2 - 210*z^2*(2*u + 2*x)*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2)) + (13*J6p*R1^6*(2*u + 2*x)*(u - 1)*(5*((u + x)^2 + y^2 + z^2)^3 - 105*z^2*((u + x)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x)^2 + y^2 + z^2)))/(32*((u + x)^2 + y^2 + z^2)^(15/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (J6p*R1^6*(u - 1)*(630*y*z^4 + 30*y*((u + x)^2 + y^2 + z^2)^2 - 420*y*z^2*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2)) + (13*J6p*R1^6*y*(u - 1)*(5*((u + x)^2 + y^2 + z^2)^3 - 105*z^2*((u + x)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(15/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (J6p*R1^6*(u - 1)*(756*z^5 + 180*z*((u + x)^2 + y^2 + z^2)^2 - 840*z^3*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2)) + (13*J6p*R1^6*z*(u - 1)*(5*((u + x)^2 + y^2 + z^2)^3 - 105*z^2*((u + x)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(15/2))];


dX_J6s_eq = [x + 2*yd + ((2*u + 2*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(3/2)) - (u*(2*u + 2*x - 2))/(2*((u + x - 1)^2 + y^2 + z^2)^(3/2)) + (J6s*R2^6*u*(315*z^4*(2*u + 2*x - 2) + 15*(2*u + 2*x - 2)*((u + x - 1)^2 + y^2 + z^2)^2 - 210*z^2*(2*u + 2*x - 2)*((u + x - 1)^2 + y^2 + z^2)))/(16*((u + x - 1)^2 + y^2 + z^2)^(13/2)) - (13*J6s*R2^6*u*(2*u + 2*x - 2)*(5*((u + x - 1)^2 + y^2 + z^2)^3 - 105*z^2*((u + x - 1)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x - 1)^2 + y^2 + z^2)))/(32*((u + x - 1)^2 + y^2 + z^2)^(15/2));
            y - 2*xd - (u*y)/((u + x - 1)^2 + y^2 + z^2)^(3/2) + (y*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) + (J6s*R2^6*u*(630*y*z^4 + 30*y*((u + x - 1)^2 + y^2 + z^2)^2 - 420*y*z^2*((u + x - 1)^2 + y^2 + z^2)))/(16*((u + x - 1)^2 + y^2 + z^2)^(13/2)) - (13*J6s*R2^6*u*y*(5*((u + x - 1)^2 + y^2 + z^2)^3 - 105*z^2*((u + x - 1)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x - 1)^2 + y^2 + z^2)))/(16*((u + x - 1)^2 + y^2 + z^2)^(15/2));
            (z*(u - 1))/((u + x)^2 + y^2 + z^2)^(3/2) - (u*z)/((u + x - 1)^2 + y^2 + z^2)^(3/2) - (J6s*R2^6*u*(756*z^5 + 180*z*((u + x - 1)^2 + y^2 + z^2)^2 - 840*z^3*((u + x - 1)^2 + y^2 + z^2)))/(16*((u + x - 1)^2 + y^2 + z^2)^(13/2)) - (13*J6s*R2^6*u*z*(5*((u + x - 1)^2 + y^2 + z^2)^3 - 105*z^2*((u + x - 1)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x - 1)^2 + y^2 + z^2)))/(16*((u + x - 1)^2 + y^2 + z^2)^(15/2))];



%%% Errors
error_J2p = dX_J2p(4:6)' - dX_J2p_eq;
error_J2s = dX_J2s(4:6)' - dX_J2s_eq;
error_J3p = dX_J3p(4:6)' - dX_J3p_eq;
error_J3s = dX_J3s(4:6)' - dX_J3s_eq;
error_J4p = dX_J4p(4:6)' - dX_J4p_eq;
error_J4s = dX_J4s(4:6)' - dX_J4s_eq;
error_J5p = dX_J5p(4:6)' - dX_J5p_eq;
error_J5s = dX_J5s(4:6)' - dX_J5s_eq;
error_J6p = dX_J6p(4:6)' - dX_J6p_eq;
error_J6s = dX_J6s(4:6)' - dX_J6s_eq;


fprintf('J2p errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J2p(1), error_J2p(2), error_J2p(3))
fprintf('J2s errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J2s(1), error_J2s(2), error_J2s(3))

fprintf('J3p errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J3p(1), error_J3p(2), error_J3p(3))
fprintf('J3s errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J3s(1), error_J3s(2), error_J3s(3))

fprintf('J4p errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J4p(1), error_J4p(2), error_J4p(3))
fprintf('J4s errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J4s(1), error_J4s(2), error_J4s(3))

fprintf('J5p errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J5p(1), error_J5p(2), error_J5p(3))
fprintf('J5s errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J5s(1), error_J5s(2), error_J5s(3))

fprintf('J6p errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J6p(1), error_J6p(2), error_J6p(3))
fprintf('J6s errors:\nx: %1.1e\ty: %1.1e\tz: %1.1e\n\n', error_J6s(1), error_J6s(2), error_J6s(3))

fprintf('========================================================================\n')


% ========================================================================
%%% Testing the gravitational potential terms
% ========================================================================
%%% General Form
% M_J2 = GM*(R^2)*J2*(r^2 - 3*z^2) / (2*r^5);
% M_J3 = GM*(R^3)*J3*z*(3*r^2 - 5*z^2) / (2*r^7);
% M_J4 = GM*(R^4)*J4*(-3*r^4 + 30*(z^2)*(r^2) - 35*z^4) / (8*r^9);
% M_J5 = GM*(R^5)*J5*z*(-15*r^4 + 70*(z^2)*(r^2) - 63*z^4) / (8*r^11);
% M_J6 = GM*(R^6)*J6*(5*r^6 - 105*(z^2)*(r^4) + 315*(z^4)*(r^2) - 231*z^6) / (16*r^13);

%%% Primaries 
M_J2p = (1-u)*(R1^2)*J2p*(r1^2 - 3*z^2) / (2*r1^5);
M_J3p = (1-u)*(R1^3)*J3p*z*(3*r1^2 - 5*z^2) / (2*r1^7);
M_J4p = (1-u)*(R1^4)*J4p*(-3*r1^4 + 30*(z^2)*(r1^2) - 35*z^4) / (8*r1^9);
M_J5p = (1-u)*(R1^5)*J5p*z*(-15*r1^4 + 70*(z^2)*(r1^2) - 63*z^4) / (8*r1^11);
M_J6p = (1-u)*(R1^6)*J6p*(5*r1^6 - 105*(z^2)*(r1^4) + 315*(z^4)*(r1^2) - 231*z^6) / (16*r1^13);

%%% Secondaries
M_J2s = u*(R2^2)*J2s*(r2^2 - 3*z^2) / (2*r2^5);
M_J3s = u*(R2^3)*J3s*z*(3*r2^2 - 5*z^2) / (2*r2^7);
M_J4s = u*(R2^4)*J4s*(-3*r2^4 + 30*(z^2)*(r2^2) - 35*z^4) / (8*r2^9);
M_J5s = u*(R2^5)*J5s*z*(-15*r2^4 + 70*(z^2)*(r2^2) - 63*z^4) / (8*r2^11);
M_J6s = u*(R2^6)*J6s*(5*r2^6 - 105*(z^2)*(r2^4) + 315*(z^4)*(r2^2) - 231*z^6) / (16*r2^13);


%%% Putting together for brevity
U2 = (x^2 + y^2)*(1/2) + (1-u)/r1 + u/r2 + M_J2p + M_J2s;
U3 = (x^2 + y^2)*(1/2) + (1-u)/r1 + u/r2 + M_J3p + M_J3s;
U4 = (x^2 + y^2)*(1/2) + (1-u)/r1 + u/r2 + M_J4p + M_J4s;
U5 = (x^2 + y^2)*(1/2) + (1-u)/r1 + u/r2 + M_J5p + M_J5s;
U6 = (x^2 + y^2)*(1/2) + (1-u)/r1 + u/r2 + M_J6p + M_J6s;

%%% Equation Generator
U2_gen = x^2/2 - (u - 1)/((u + x)^2 + y^2 + z^2)^(1/2) + y^2/2 + u/((u + x - 1)^2 + y^2 + z^2)^(1/2) + (J2s*R2^2*u*((u + x - 1)^2 + y^2 - 2*z^2))/(2*((u + x - 1)^2 + y^2 + z^2)^(5/2)) - (J2p*R1^2*(u - 1)*((u + x)^2 + y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(5/2));
U3_gen = x^2/2 - (u - 1)/((u + x)^2 + y^2 + z^2)^(1/2) + y^2/2 + u/((u + x - 1)^2 + y^2 + z^2)^(1/2) + (J3s*R2^3*u*z*(3*(u + x - 1)^2 + 3*y^2 - 2*z^2))/(2*((u + x - 1)^2 + y^2 + z^2)^(7/2)) - (J3p*R1^3*z*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(7/2));
U4_gen = x^2/2 - (u - 1)/((u + x)^2 + y^2 + z^2)^(1/2) + y^2/2 + u/((u + x - 1)^2 + y^2 + z^2)^(1/2) + (J4p*R1^4*(u - 1)*(3*((u + x)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(9/2)) - (J4s*R2^4*u*(3*((u + x - 1)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x - 1)^2 + y^2 + z^2)))/(8*((u + x - 1)^2 + y^2 + z^2)^(9/2));
U5_gen = x^2/2 - (u - 1)/((u + x)^2 + y^2 + z^2)^(1/2) + y^2/2 + u/((u + x - 1)^2 + y^2 + z^2)^(1/2) - (J5s*R2^5*u*z*(15*((u + x - 1)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x - 1)^2 + y^2 + z^2)))/(8*((u + x - 1)^2 + y^2 + z^2)^(11/2)) + (J5p*R1^5*z*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(11/2));
U6_gen = x^2/2 - (u - 1)/((u + x)^2 + y^2 + z^2)^(1/2) + y^2/2 + u/((u + x - 1)^2 + y^2 + z^2)^(1/2) + (J6s*R2^6*u*(5*((u + x - 1)^2 + y^2 + z^2)^3 - 105*z^2*((u + x - 1)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x - 1)^2 + y^2 + z^2)))/(16*((u + x - 1)^2 + y^2 + z^2)^(13/2)) - (J6p*R1^6*(u - 1)*(5*((u + x)^2 + y^2 + z^2)^3 - 105*z^2*((u + x)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2));

%%% Errors
U2_error = U2 - U2_gen;
U3_error = U3 - U3_gen;
U4_error = U4 - U4_gen;
U5_error = U5 - U5_gen;
U6_error = U6 - U6_gen;

fprintf('U2_error: %1.1e\n\n', U2_error)
fprintf('U3_error: %1.1e\n\n', U3_error)
fprintf('U4_error: %1.1e\n\n', U4_error)
fprintf('U5_error: %1.1e\n\n', U5_error)
fprintf('U6_error: %1.1e\n\n', U6_error)


fprintf('========================================================================\n')



% ========================================================================
%%% Testing collinear equilibrium points
% ========================================================================
prms.u    = u; 
prms.R1_n = R1;
prms.R2_n = R2;
prms.J2p  = J2p; 


rLP_old = EquilibriumPoints_J2(prms.u,prms.J2p,0,prms.R1_n,0,1:3);

rLP_new = collinearEquilibriumPoints_ZH(prms);
fprintf('========================================================================\n')



% ========================================================================
%%% Test speeds
% ========================================================================
n_runs = 10000000;

%%% Pick one case
runCase = 'J3x';
% runCase = 'J3z';
% runCase = 'J4x';
% runCase = 'J4z'; 
% runCase = 'J5x';
% runCase = 'J5z';
% runCase = 'J6x';
% runCase = 'J6z'; 


if runSpeedTest == 1
    
    
    ticMe = tic;
    for kk = 1:n_runs
        if runCase == 'J3x'
            dMdx_J3p = 5*(1-u)*(R1^3)*J3p*z*(7*z^2 - 3*r1^2) * (x+u) / (2*r1^9);
        elseif runCase == 'J3z'
            dMdz_J3p = (1-u)*(R1^3)*J3p*(3*r1^4 - 30*z^2*r1^2 + 35*z^4) / (2*r1^9);
        elseif runCase == 'J4x'
            dMdx_J4p = 15*(1-u)*(R1^4)*J4p*(21*z^4 - 14*r1^2*z^2 + r1^4) * (x+u) / (8*r1^11);
        elseif runCase == 'J4z'
            dMdz_J4p = 5*(1-u)*(R1^4)*J4p*z*(15*r1^4 - 70*z^2*r1^2 + 63*z^4) / (8*r1^11);
        elseif runCase == 'J5x'
            dMdx_J5p = 7*(1-u)*(R1^5)*J5p*z*(15*r1^4 - 90*z^2*r1^2 + 99*z^4) * (x+u) / (8*r1^13);
        elseif runCase == 'J5z'
            dMdz_J5p = 3*(1-u)*(R1^5)*J5p*(-5*r1^6 + 105*z^2*r1^4 - 315*z^4*r1^2 + 231*z^6) / (8*r1^13);
        elseif runCase == 'J6x'
            dMdx_J6p = 7*(1-u)*(R1^6)*J6p*(-5*r1^6 + 135*z^2*r1^4 - 495*z^4*r1^2 + 429*z^6) * (x+u) / (16*r1^15);
        elseif runCase == 'J6z'
            dMdz_J6p = 7*(1-u)*(R1^6)*J6p*z*(-35*r1^6 + 315*z^2*r1^4 - 693*z^4*r1^2 + 429*z^6) / (16*r1^15);
        end
    end
    tocMe = toc(ticMe);
    
    
    ticMat = tic;
    for kk = 1:n_runs
        if runCase == 'J3x'
            eqGen_dMdx_J3p = - (J3p*R1^3*z*(6*u + 6*x)*(u - 1))/(2*((u + x)^2 + y^2 + z^2)^(7/2)) + (7*J3p*R1^3*z*(2*u + 2*x)*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(4*((u + x)^2 + y^2 + z^2)^(9/2));
        elseif runCase == 'J3z'
            eqGen_dMdz_J3p = (2*J3p*R1^3*z^2*(u - 1))/((u + x)^2 + y^2 + z^2)^(7/2) - (J3p*R1^3*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(7/2)) + (7*J3p*R1^3*z^2*(u - 1)*(3*(u + x)^2 + 3*y^2 - 2*z^2))/(2*((u + x)^2 + y^2 + z^2)^(9/2));
        elseif runCase == 'J4x'
            eqGen_dMdx_J4p = (J4p*R1^4*(6*(2*u + 2*x)*((u + x)^2 + y^2 + z^2) - 30*z^2*(2*u + 2*x))*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(9/2)) - (9*J4p*R1^4*(2*u + 2*x)*(u - 1)*(3*((u + x)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(11/2));
        elseif runCase == 'J4z'
            eqGen_dMdz_J4p = - (J4p*R1^4*(48*z*((u + x)^2 + y^2 + z^2) - 80*z^3)*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(9/2)) - (9*J4p*R1^4*z*(u - 1)*(3*((u + x)^2 + y^2 + z^2)^2 + 35*z^4 - 30*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(11/2));
        elseif runCase == 'J5x'
            eqGen_dMdx_J5p = (J5p*R1^5*z*(30*(2*u + 2*x)*((u + x)^2 + y^2 + z^2) - 70*z^2*(2*u + 2*x))*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(11/2)) - (11*J5p*R1^5*z*(2*u + 2*x)*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2));
        elseif runCase == 'J5z'
            eqGen_dMdz_J5p = (J5p*R1^5*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(11/2)) - (11*J5p*R1^5*z^2*(u - 1)*(15*((u + x)^2 + y^2 + z^2)^2 + 63*z^4 - 70*z^2*((u + x)^2 + y^2 + z^2)))/(8*((u + x)^2 + y^2 + z^2)^(13/2)) - (J5p*R1^5*z*(80*z*((u + x)^2 + y^2 + z^2) - 112*z^3)*(u - 1))/(8*((u + x)^2 + y^2 + z^2)^(11/2));
        elseif runCase == 'J6x'
            eqGen_dMdx_J6p = - (J6p*R1^6*(u - 1)*(315*z^4*(2*u + 2*x) + 15*(2*u + 2*x)*((u + x)^2 + y^2 + z^2)^2 - 210*z^2*(2*u + 2*x)*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2)) + (13*J6p*R1^6*(2*u + 2*x)*(u - 1)*(5*((u + x)^2 + y^2 + z^2)^3 - 105*z^2*((u + x)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x)^2 + y^2 + z^2)))/(32*((u + x)^2 + y^2 + z^2)^(15/2));
        elseif runCase == 'J6z'
            eqGen_dMdz_J6p = (J6p*R1^6*(u - 1)*(756*z^5 + 180*z*((u + x)^2 + y^2 + z^2)^2 - 840*z^3*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(13/2)) + (13*J6p*R1^6*z*(u - 1)*(5*((u + x)^2 + y^2 + z^2)^3 - 105*z^2*((u + x)^2 + y^2 + z^2)^2 - 231*z^6 + 315*z^4*((u + x)^2 + y^2 + z^2)))/(16*((u + x)^2 + y^2 + z^2)^(15/2));
        end
    end
    tocMat = toc(ticMat);
    
    
fprintf('My Time:     %1.1f sec\n',tocMe)
fprintf('Matlab Time: %1.1f sec\n',tocMat)

end


% ========================================================================
%%% Formatting Structures
% ========================================================================
% -------------------------------------------------
%%% 
% -------------------------------------------------

% --------------------------
%%% 
% --------------------------

% ========================================================================
%%% Closeout
% ========================================================================
tocWhole = toc(ticWhole);
fprintf('\n(Elapsed time: %1.4f seconds)\n',tocWhole)
















